ame: Build and Test

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016, ubuntu-16.04, macos-10.15]
        requirements: [requirements-swmm.txt]
        include:
          - os: windows-2016
            sys_pkgs: choco install boost-msvc-14.1
            build_unit_test: make.cmd -t -g "Visual Studio 15 2017 Win64"
            build_reg_test:  make.cmd -g "Visual Studio 15 2017 Win64"
            before_reg_test: before-nrtest.cmd
            run_reg_test:    run-nrtests.cmd
            build_id: "%GITHUB_RUN_ID%_%GITHUB_RUN_NUMBER%"
            experimental: false
            artifacts_ext: zip
            artifact_content_type: zip
            defaults:
              run:
                shell: cmd
                working-directory: ./ci-tools/windows

          - os: ubuntu-16.04
            sys_pkgs: sudo apt install libboost-dev libboost-all-dev
            build_unit_test: make.sh -t -g "Unix Makefiles"
            build_reg_test:  make.sh -g "Unix Makefiles"
            before_reg_test: before-nrtest.sh
            run_reg_test:    run-nrtests.sh
            build_id: ${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}
            experimental: true
            artifacts_ext: tar.gz
            artifact_content_type: tar
            defaults:
              run:
                shell: bash
                working-directory: ./ci-tools/linux

          - os: macos-10.15
            sys_pkgs: brew install libomp boost
            build_unit_test: make.zsh -t -g "Xcode"
            build_reg_test:  make.zsh -g "Xcode"
            before_reg_test: before-nrtest.zsh
            run_reg_test:    run-nrtests.zsh
            build_id: ${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}
            experimental: true
            artifacts_ext: tar.gz
            artifact_content_type: tar
            defaults:
              run:
                shell: zsh {0}
                working-directory: ./ci-tools/darwin

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    defaults:
      run:
        shell: ${{ matrix.defaults.run.shell }}
        working-directory: ${{ matrix.defaults.run.working-directory }}
    env:
      OMP_NUM_THREADS: 1
      PROJECT: swmm
      BUILD_HOME: build
      TEST_HOME: nrtests


    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Clone ci-tools repo
        uses: actions/checkout@v2
        with:
          repository: OpenWaterAnalytics/ci-tools
          ref: master
          path: ci-tools

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-swmm.txt

      - name: Install required system packages
        run: ${{ matrix.sys_pkgs }}

      - name: Build and unit test
        run: ./${{ matrix.build_unit_test }}

      - name: Build for reg test
        run: ./${{ matrix.build_reg_test }}

      - name: Before reg test
        env:
          NRTESTS_URL: https://github.com/OpenWaterAnalytics/swmm-nrtestsuite
          BENCHMARK_TAG: v1.0.4-dev
        run: ./${{ matrix.before_reg_test }} ${{ env.BENCHMARK_TAG }}

      - name: Run reg test
        run: ./${{ matrix.run_reg_test }} ${{ matrix.build_id }}

      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: build-test-artifacts
          path: upload/*.*
